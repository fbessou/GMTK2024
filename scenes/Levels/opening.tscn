[gd_scene load_steps=16 format=3 uid="uid://dt4infqqtp0ss"]

[ext_resource type="Material" uid="uid://c0gpbahd43asc" path="res://resources/materials/environment.tres" id="1_uchm1"]
[ext_resource type="Texture2D" uid="uid://cabga2hoti2hn" path="res://assets/textures/runes/rune.svg" id="2_kq70v"]
[ext_resource type="Shader" path="res://resources/shaders/rune.gdshader" id="2_pgc2i"]
[ext_resource type="Texture2D" uid="uid://0nlyb004fspv" path="res://assets/textures/environment/level1/1-collision.svg" id="3_wrxp0"]

[sub_resource type="GDScript" id="GDScript_tof11"]
script/source = "extends Node2D

const PlanktonIdleScn = preload(\"res://scenes/extra/plankton_idle.tscn\")
@onready var rune: Sprite2D = $RunePath/RunePathFollow/Rune
@onready var plankton_bg :Node2D = $PlanktonsBackground
@onready var plankton_fg :Node2D = $PlanktonsForeground
@onready var plankton_path :Path2D = $PlanktonPath
@onready var plankton_path_follow :PathFollow2D = $PlanktonPath/PlanktonPathFollow

@onready var elected_plankton :PlanktonIdle = null

@export var plankton_count: int = 200;
@export var plankton_fg_count: int = 10;

# 500px, 100px de mou largeur, 100px de bande
# 250px - 450px hauteur
var horizontal_center := 512

var plankton_instances : Array[PlanktonIdle] = []

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	for index in range(plankton_count):
		var proximity := float(index)/float(plankton_count)*2
		var plankton := _create_plankton()
		if abs(plankton.position.x - horizontal_center) < 50:
			proximity = 0.1
		plankton.scale *= lerp(0.5, 1., proximity)
		var mat := plankton.material as ShaderMaterial
		mat.set_shader_parameter(\"proximity\", proximity)
		$PlanktonsBackground.add_child(plankton)
		plankton_instances.append(plankton)


	for index in range(plankton_fg_count):
		var plankton := _create_plankton()
		plankton.scale *= 2
		var mat := plankton.material as ShaderMaterial
		mat.set_shader_parameter(\"proximity\", 2.)
		$PlanktonsForeground.add_child(plankton)	

func _create_plankton() -> PlanktonIdle:
	var sprite := PlanktonIdleScn.instantiate() as PlanktonIdle
	var x := horizontal_center + randi_range(-100, 100)
	var y := randi_range(250, 450)
	sprite.position = Vector2(x, y)
	return sprite
	
func elect_plankton() -> void:
	var start_point := plankton_path.curve.get_point_position(0)
	var closest_plankton := plankton_instances[0]
	var min_dist := start_point.distance_squared_to(plankton_instances[0].global_position)
	
	for plankton in plankton_instances as Array[Node2D]:
		var dist := start_point.distance_squared_to(plankton.global_position)
		if dist < min_dist:
			closest_plankton = plankton
			min_dist = dist
			
	plankton_path.curve.set_point_position(0, closest_plankton.global_position)
	closest_plankton.reparent(plankton_path_follow)
	closest_plankton.position = Vector2.ZERO
		
	elected_plankton = closest_plankton
	elected_plankton.z_index = 1
	elected_plankton.moving = false
	

	var mat := elected_plankton.material as ShaderMaterial
	mat.set_shader_parameter(\"proximity\", 1.)
	
func contaminate() -> void:
	# change color of elected plankton
	var plankton_mat := elected_plankton.material as ShaderMaterial
	var plankton_tween_callback := func(contamination: float) -> void:
		plankton_mat.set_shader_parameter(\"plankton_contamination\", contamination)
	var rune_mat := rune.material as ShaderMaterial
	var rune_tween_callback := func(power: float) -> void:
		rune_mat.set_shader_parameter(\"power\", power)
	var tween := get_tree().create_tween()
	tween.tween_method(plankton_tween_callback, 0. , 1., 2.)
	tween.parallel().tween_method(rune_tween_callback, 1., 0., 2.);
	#tween.play()
	#mat.set_shader_parameter(\"plankton_contamination\", 1.)
	# mat.set_shader_parameter(\"depth\", 1.)

	
	# remove color from stone
	# fade out for next stage
"

[sub_resource type="Gradient" id="Gradient_41m3o"]
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_l4y21"]
gradient = SubResource("Gradient_41m3o")
fill_from = Vector2(0.486239, 0)
fill_to = Vector2(0.486239, 0.376147)

[sub_resource type="Curve2D" id="Curve2D_pbuyi"]
resource_name = "PlanktonCurve"
_data = {
"points": PackedVector2Array(-90.3112, -95.9227, 90.3112, 95.9227, 361, 339, -25.4846, -4.95534, 25.4846, 4.95534, 480, 461, 0, 0, 0, 0, 552, 471, 17.2257, 16.7538, -17.2257, -16.7538, 566, 457, -6.55509, -11.2373, 6.55509, 11.2373, 515, 470, 0, 0, 0, 0, 542, 484)
}
point_count = 6

[sub_resource type="Animation" id="Animation_nk5pk"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("RunePath/RunePathFollow:progress_ratio")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PlanktonPath/PlanktonPathFollow:progress_ratio")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Camera2D:zoom")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_qcv60"]
resource_name = "opening"
length = 30.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("RunePath/RunePathFollow:progress_ratio")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(2, 15.1667),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PlanktonPath/PlanktonPathFollow:progress_ratio")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(15.2, 20.0333),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Camera2D:zoom")
tracks/2/interp = 0
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.133333, 10.4333),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(3, 3)]
}
tracks/3/type = "method"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(15.2, 20.2667),
"transitions": PackedFloat32Array(1, 1),
"values": [{
"args": [],
"method": &"elect_plankton"
}, {
"args": [],
"method": &"contaminate"
}]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_o0wly"]
_data = {
"RESET": SubResource("Animation_nk5pk"),
"opening": SubResource("Animation_qcv60")
}

[sub_resource type="Curve2D" id="Curve2D_5yaxt"]
resource_name = "RuneCurve"
_data = {
"points": PackedVector2Array(23.811, -57.1464, -23.811, 57.1464, -5, -214, 33.3641, -184.166, -33.3641, 184.166, 16, -51, 6.52279, -65.7774, -6.52279, 65.7774, 10, 148, 7.11896, -53.021, -7.11896, 53.021, 27, 256, -6.56449, -16.5261, 6.56449, 16.5261, 45, 367)
}
point_count = 5

[sub_resource type="ShaderMaterial" id="ShaderMaterial_lgdwn"]
shader = ExtResource("2_pgc2i")
shader_parameter/power = 1.0

[sub_resource type="Gradient" id="Gradient_3wyr7"]
resource_name = "RuneLightGradient"
interpolation_mode = 2
offsets = PackedFloat32Array(0.0337838, 0.283784, 1)
colors = PackedColorArray(1, 0.848331, 0.803675, 1, 0.2484, 0.2484, 0.2484, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_kmflc"]
gradient = SubResource("Gradient_3wyr7")
width = 200
height = 200
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(1, 0.518868)

[node name="Opening" type="Node2D"]
material = ExtResource("1_uchm1")
script = SubResource("GDScript_tof11")

[node name="BlackBackground" type="Polygon2D" parent="."]
color = Color(0, 0, 0, 1)
polygon = PackedVector2Array(-53, -26, 1145, -64, 1136, 830, -53, 887)

[node name="Shadow" type="PointLight2D" parent="."]
position = Vector2(465, -1330)
scale = Vector2(68.8594, 66.9687)
blend_mode = 2
texture = SubResource("GradientTexture2D_l4y21")

[node name="PlanktonPath" type="Path2D" parent="."]
curve = SubResource("Curve2D_pbuyi")

[node name="PlanktonPathFollow" type="PathFollow2D" parent="PlanktonPath"]
position = Vector2(361, 339)
rotates = false
cubic_interp = false
loop = false

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_o0wly")
}
autoplay = "opening"

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(512, 384)

[node name="PlanktonsBackground" type="Node2D" parent="."]

[node name="RunePath" type="Path2D" parent="."]
position = Vector2(503, 124)
curve = SubResource("Curve2D_5yaxt")

[node name="RunePathFollow" type="PathFollow2D" parent="RunePath"]
position = Vector2(-5, -214)
rotates = false
loop = false

[node name="Rune" type="Sprite2D" parent="RunePath/RunePathFollow"]
material = SubResource("ShaderMaterial_lgdwn")
scale = Vector2(0.28125, 0.28125)
texture = ExtResource("2_kq70v")

[node name="RuneLight" type="PointLight2D" parent="RunePath/RunePathFollow/Rune"]
position = Vector2(3.55558, 0.00012207)
scale = Vector2(7.21993, 7.21993)
texture = SubResource("GradientTexture2D_kmflc")

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(716, 57)
texture = ExtResource("3_wrxp0")

[node name="PlanktonsForeground" type="Node2D" parent="."]
position = Vector2(0, -3.05176e-05)
